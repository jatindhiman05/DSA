// https://www.geeksforgeeks.org/problems/alien-dictionary/
#include<iostream>
#include<vector>
#include<queue>
using namespace std;

class Solution{
    vector<int> topSort(vector<int> adj[],int K){
        vector<int> inDegree(K,0);
        
        for(int u = 0;u < K;u++){
            for(auto &v: adj[u]){
                inDegree[v]++;
            }
        }
        
        queue<int> q;
        
        for(int i=0;i<K;i++){
            if(inDegree[i] == 0){
                q.push(i);
            }
        }
        
        vector<int> result;
        
        while(!q.empty()){
            int front = q.front();
            result.push_back(front);
            q.pop();
            
            for(auto &v: adj[front]){
                inDegree[v]--;
                
                if(inDegree[v] == 0){
                    q.push(v);
                }
            }
        }
        
        return result;
    }
    public:
    string findOrder(string dict[], int N, int K) {
        vector<int> adj[K];
        
        for(int i=0;i<N-1;i++){
            string s1 = dict[i];
            string s2 = dict[i + 1];
            
            int l = min(s1.length(),s2.length());
            
            for(int i = 0;i<l;i++){
                if(s1[i] != s2[i]){
                    adj[s1[i] - 'a'].push_back(s2[i] - 'a');
                    break;
                }
            }
        }
        
        vector<int> top = topSort(adj,K);
        string ans = "";
        
        for(auto &i: top){
            ans = ans + (char)(i + 'a');
        }
        
        return ans;
    }
};